// Generated by Dagger (https://dagger.dev).
package com.example.quoteplus.presentation.viewmodel;

import com.example.quoteplus.domain.usecase.GetQuotesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ListQuoteViewModel_Factory implements Factory<ListQuoteViewModel> {
  private final Provider<GetQuotesUseCase> getQuotesUseCaseProvider;

  public ListQuoteViewModel_Factory(Provider<GetQuotesUseCase> getQuotesUseCaseProvider) {
    this.getQuotesUseCaseProvider = getQuotesUseCaseProvider;
  }

  @Override
  public ListQuoteViewModel get() {
    return newInstance(getQuotesUseCaseProvider.get());
  }

  public static ListQuoteViewModel_Factory create(
      Provider<GetQuotesUseCase> getQuotesUseCaseProvider) {
    return new ListQuoteViewModel_Factory(getQuotesUseCaseProvider);
  }

  public static ListQuoteViewModel newInstance(GetQuotesUseCase getQuotesUseCase) {
    return new ListQuoteViewModel(getQuotesUseCase);
  }
}
