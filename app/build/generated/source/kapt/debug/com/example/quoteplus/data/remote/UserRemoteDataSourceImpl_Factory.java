// Generated by Dagger (https://dagger.dev).
package com.example.quoteplus.data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class UserRemoteDataSourceImpl_Factory implements Factory<UserRemoteDataSourceImpl> {
  private final Provider<UserService> userServiceProvider;

  public UserRemoteDataSourceImpl_Factory(Provider<UserService> userServiceProvider) {
    this.userServiceProvider = userServiceProvider;
  }

  @Override
  public UserRemoteDataSourceImpl get() {
    return newInstance(userServiceProvider.get());
  }

  public static UserRemoteDataSourceImpl_Factory create(Provider<UserService> userServiceProvider) {
    return new UserRemoteDataSourceImpl_Factory(userServiceProvider);
  }

  public static UserRemoteDataSourceImpl newInstance(UserService userService) {
    return new UserRemoteDataSourceImpl(userService);
  }
}
