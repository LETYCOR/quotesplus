// Generated by Dagger (https://dagger.dev).
package com.example.quoteplus.core.di;

import com.example.quoteplus.data.remote.UserService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_ProvideUserServiceFactory implements Factory<UserService> {
  private final NetworkModule module;

  public NetworkModule_ProvideUserServiceFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public UserService get() {
    return provideUserService(module);
  }

  public static NetworkModule_ProvideUserServiceFactory create(NetworkModule module) {
    return new NetworkModule_ProvideUserServiceFactory(module);
  }

  public static UserService provideUserService(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserService());
  }
}
